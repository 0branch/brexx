{\rtf1\ansi\ansicpg1252\uc1\deff1\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f35\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}
{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f46\fswiss\fcharset238\fprq2 Arial CE;}
{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}{\f50\fswiss\fcharset162\fprq2 Arial Tur;}{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}
{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f386\fswiss\fcharset238\fprq2 Tahoma CE;}{\f387\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f389\fswiss\fcharset161\fprq2 Tahoma Greek;}
{\f390\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f391\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f392\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f393\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f394\fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}
{\f395\fswiss\fcharset222\fprq2 Tahoma (Thai);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red255\green255\blue255;}{\stylesheet{
\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 
heading 2;}{\s3\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{
\s4\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel3\adjustright\rin0\lin0\itap0 \b\i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 
\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 Body Text;}{\s16\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 Body Text 2;}{\*
\cs17 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s18\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f35\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 \ssemihidden \styrsid10289445 Balloon Text;}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\listtable{\list\listtemplateid412756726\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat4\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\fbias0 
\fi-360\li660\jclisttab\tx660\lin660 }{\listname ;}\listid642125344}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}
\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid766385802}{\list\listtemplateid685034422\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext
\'01\u-3880 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li645\jclisttab\tx645\lin645 }{\listname ;}\listid817649619}{\list\listtemplateid100933540\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0
\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-405\li705\jclisttab\tx705\lin705 }{\listname ;}\listid1461148020}{\list\listtemplateid1308904932\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\f0\fbias0 \fi-390\li690\jclisttab\tx690\lin690 }{\listname ;}\listid1521704600}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1977485913}{\list\listtemplateid-379297298\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat15\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\f0\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid2004819315}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid2085489331}}{\*\listoverridetable{\listoverride\listid1521704600
\listoverridecount0\ls1}{\listoverride\listid1461148020\listoverridecount0\ls2}{\listoverride\listid642125344\listoverridecount0\ls3}{\listoverride\listid817649619\listoverridecount0\ls4}{\listoverride\listid2004819315\listoverridecount0\ls5}
{\listoverride\listid1977485913\listoverridecount0\ls6}{\listoverride\listid2085489331\listoverridecount0\ls7}{\listoverride\listid766385802\listoverridecount0\ls8}}{\*\revtbl {Unknown;}{Vasilis Vlachoudis;}}{\*\rsidtbl \rsid3096840\rsid10289445\rsid13777131}{\*\generator Microsoft Word 11.
0.5604;}{\info{\author    }{\operator Vasilis Vlachoudis}{\creatim\yr2004\mo3\dy23\hr9\min44}{\revtim\yr2004\mo6\dy12\hr18\min24}{\version136}{\edmins1778}{\nofpages9}{\nofwords3258}{\nofchars18573}{\*\company ABC}{\nofcharsws21788}{\vern24689}}
\widowctrl\ftnbj\aenddoc\revisions\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale158\viewzk2\nolnhtadjtbl\rsidroot13777131 \fet0
\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs20\insrsid10289445 Chapter 20 --   BRexx
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs20\insrsid10289445 Introduction
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par BRexx is a}{\deleted\fs20\revauthdel1\revdttmdel-964270961\insrsid10289445\delrsid10289445 n}{\fs20\insrsid10289445 
 free version of classic Rexx developed by Vasilis Vlachoudis of the Cern Laboratory in Switzerland.   Written as an ANSI C language program, BRexx is notable for its high performance.   It also provides a nice collection of special built-in fun
ctions and function libraries that offer many extra features.
\par 
\par BRexx was originally written for DOS in the early 1990s.  With the rise of Windows,  it was revised for the 32-bit world of Windows and 32-bit DOS.  BRexx also runs under Linux and Unix family 
operating systems, and has a good set of functions specially written for Windows CE.   Other operating systems it runs on include MacOS, BeOS, and the Amiga OS.
\par 
\par An outstanding feature of BRexx is its tiny footprint.  The entire product, including full doc
umentation and examples, comprises only a few hundred kilobytes.  This is small enough to fit on a single floppy diskette.  Installation is simple.  Just download a file, decompress it, set an environmental variable, and voila!  BRexx is ready to go.

\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Advantages 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par Here are some key advantages to BRexx:
\par 
\par }{\i\fs20\insrsid10289445 Performance}{\fs20\insrsid10289445 .   Since it is written as a C program, this interpreter is fast.  It consistently beats other Rexx interpreters in direct comparisons.
\par 
\par }{\i\fs20\insrsid10289445 Small Footprint}{\fs20\insrsid10289445 .   Distributed as a single compressed file, the entire product requires only a few hundred kilobytes.
\par 
\par }{\i\fs20\insrsid10289445 Proven Support}{\fs20\insrsid10289445 .   Product documentation shows a consistent, dedicated history of product improvements, bug fixes and upgrades for over a decade.
\par 
\par }{\i\fs20\insrsid10289445 Extra Functions for Common Tasks}{\fs20\insrsid10289445 .   Bundled with the interpreter are about a dozen external function libraries for purposes like screen I/O, C-style file I/O, Unix and DOS functions and the like.
\par 
\par }{\i\fs20\insrsid10289445 Special Windows CE Features}{\fs20\insrsid10289445 .   BRexx is specially customized for Windows CE by the addition of some 20 extra functions and appropriate documentation.
\par 
\par }{\i\fs20\insrsid10289445 Commands and Programs Treated as Functions}{\fs20\insrsid10289445 .   Scripts can run commands or programs}{\i\fs20\insrsid10289445  coded as if they were functions}{\fs20\insrsid10289445 
 as long as those routines use standard I/O.
\par 
\par }{\i\fs20\insrsid10289445 Good Documentation with Program Examples}{\fs20\insrsid10289445 .  The product comes with complete HTML-based textual documentation and three dozen programs that illustrate its unique features. 
\par 
\par 
\par BRexx is especially suitable where machine resources are limited.   For example, the author worked with a charity that collected donated personal computers, configured them, and shipped them to third-world countries.    We needed to be able to write simpl
e
 scripts that would run on almost any PC, without having the luxury of assuming that the PC had a working CD or DVD reader, Internet or LAN connection, or any minimal amount of internal memory.   We quickly learned that the one working device every PC has
,
 no matter how old, is a floppy disk drive.   BRexx is so compact we could put both our scripts and the entire BRexx distribution on a single floppy!  Installation was as simple as copying floppy contents to the hard drive.  No configuration or compatibil
ity issues arose. BRexx is very fast so the scripts ran quickly even on older machines.
\par 
\par BRexx meets the TLR-2 standard.   The only minor differences are that it lacks the TLR-2 functions: }{\b\fs20\insrsid10289445  numeric digits, b2x, }{\fs20\insrsid10289445 and}{\b\fs20\insrsid10289445  x2b}{\fs20\insrsid10289445 .}{
\fs20\cf0\revised\revauth1\revdttm-964270961\insrsid10289445 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\pnrauth1\pnrdate-964270961\pnrnot1\adjustright\rin0\lin0\itap0 {\fs20\cf0\revised\revauth1\revdttm-964270960\insrsid10289445 \'85}{\fs20\cf0\revised\revauth1\revdttm-964270960\insrsid10289445  you have pointed out 
a mistake in the manual}{\fs20\cf0\revised\revauth1\revdttm-964270960\insrsid10289445 \'85}{\fs20\cf0\revised\revauth1\revdttm-964270960\insrsid10289445 
 The numeric digits works up to the precision of the double precission floating point number, for the intel processors is 16 significant digits.
\par }{\fs20\cf0\revised\revauth1\revdttm-964270959\insrsid10289445 The functions b2x and x2d exists but was not }{\fs20\cf0\revised\revauth1\revdttm-964270959\insrsid10289445 included}{\fs20\cf0\revised\revauth1\revdttm-964270959\insrsid10289445  
in the manual :)}{\fs20\insrsid10289445 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par BRexx goes well beyond the Rexx standards in offering many additional built-in functions, over a half dozen external function libraries, and other unique features described below.
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Downloading and Installation
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par BRexx can be downloaded from several web sites including that of its creator at }{\field\flddirty{\*\fldinst {\fs20\insrsid10289445  HYPERLINK http://bnv.home.cern.ch/bnv/ }{\fs20\insrsid13777131 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001d00000068007400740070003a002f002f0062006e0076002e0068006f006d0065002e006300650072006e002e00630068002f0062006e0076002f000000e0c9ea79f9bace118c8200aa004ba90b3a00000068007400740070003a002f002f0062006e007600
2e0068006f006d0065002e006300650072006e002e00630068002f0062006e0076002f0000000000000000000000000000001d0030000000000000000000000000004f475200002344004c4553000020000000000000000000000000000049435200160ea000000000004943450000160000010000000000000000000000}}
}{\fldrslt {\cs17\fs20\ul\cf2\insrsid10289445 http://bnv.home.cern.ch/bnv/}}}{\fs20\insrsid10289445   and Twocows Inc. at }{\field\flddirty{\*\fldinst {\fs20\insrsid10289445  HYPERLINK http://www.tucows.com/ }{\fs20\insrsid13777131 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000017000000100000007700770077002e007400750063006f00770073002e0063006f006d002f000000e0c9ea79f9bace118c8200aa004ba90b2e00000068007400740070003a002f002f007700770077002e007400750063006f00770073002e0063006f006d002f000000
0000000000000000000000000000656d700000000000000000000040000000000000003100000037000000000000002d0000000000000032000000000000000000000044000000000000000000000000000000000000}}}{\fldrslt {\cs17\fs20\ul\cf2\insrsid10289445 www.tucows.com/}}}{
\fs20\insrsid10289445 .  It can also be obtained at }{\field\flddirty{\*\fldinst {\fs20\insrsid10289445  HYPERLINK ftp://linux01.gwdg.de/brexx }{\fs20\insrsid13777131 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001c0000006600740070003a002f002f006c0069006e0075007800300031002e0067007700640067002e00640065002f00620072006500780078000000e0c9ea79f9bace118c8200aa004ba90b380000006600740070003a002f002f006c0069006e0075007800
300031002e0067007700640067002e00640065002f006200720065007800780000000000000000000000}}}{\fldrslt {\cs17\fs20\ul\cf2\insrsid10289445 ftp://linux01.gwdg.de/brexx}}}{\fs20\insrsid10289445 .   Or just access any search engine such as Google at }
{\field\flddirty{\*\fldinst {\fs20\insrsid10289445  HYPERLINK http://www.google.com }{\fs20\insrsid13777131 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000000f0000007700770077002e0067006f006f0067006c0065002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b2e00000068007400740070003a002f002f007700770077002e0067006f006f0067006c0065002e0063006f006d002f0000000044
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs17\fs20\ul\cf2\insrsid10289445 www.google.com}}}{
\fs20\insrsid10289445 , and enter \'93}{\b\fs20\insrsid10289445 BRexx}{\fs20\insrsid10289445 \'94 as the search term.  Several download sites will pop up.
\par 
\par Download a single compressed file that includes all code, documentation and example scripts.  The file contains either source code or is a binary.   File extensions include }{\b\fs20\insrsid10289445 *.zip}{\fs20\insrsid10289445 ,}{\b\fs20\insrsid10289445 
 *.tar.gz}{\fs20\insrsid10289445 ,}{\b\fs20\insrsid10289445  *.tgz}{\fs20\insrsid10289445 ,}{\b\fs20\insrsid10289445  *.gz}{\fs20\insrsid10289445 ,}{\b\fs20\insrsid10289445  }{\fs20\insrsid10289445 and}{\b\fs20\insrsid10289445  *.hqw }{
\fs20\insrsid10289445 (for the Mac OS).
\par 
\par The download files contain product licensing information.  The produce is freeware, free for non-profit and personal use.  A modest fee is required for commercial use.  Please read the product files for complete, current details on licensing and fees.

\par 
\par The product download comes with \'93help\'94 information in browser-viewable files (HTML files).   Among them is a file containing installation instructions, usually named }{\b\fs20\insrsid10289445 install.html}{\fs20\insrsid10289445 
.  These instructions tell you what you need to know to install BRexx under Windows, DOS, or Windows CE.   For Linux, Unix or BSD, perform the install as you would for any other product unde
r those systems, adding the extra steps cited in the installation instructions.
\par 
\par }{\i\fs20\insrsid10289445 
\par Windows Install}{\fs20\insrsid10289445  -  Download the }{\b\fs20\insrsid10289445 *.zip}{\fs20\insrsid10289445  file.  Double-click on the }{\b\fs20\insrsid10289445 zip}{\fs20\insrsid10289445 
 file to uncompress it.  This effectively installs the product.  No Windows installer program is needed.  
\par 
\par There are three steps to complete installation:
\par 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 1.\tab}}\pard \ql \fi-360\li1080\ri0\nowidctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls6
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc1\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin1080\itap0 {
\fs20\insrsid10289445 Create and set a new environmental variable called }{\b\fs20\insrsid10289445 RXLIB}{\fs20\insrsid10289445  to point to the location of }{\fs20\cf0\revised\revauth1\revdttm-964270958\insrsid10289445 llibrary modules of }{
\fs20\insrsid10289445 BRexx (so that the interpreter can find its libraries).
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 2.\tab}}\pard \ql \fi-360\li1080\ri0\nowidctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls6
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin1080\itap0 {
\fs20\insrsid10289445 Add the directory in which the BRexx interpreter resides to the }{\b\fs20\insrsid10289445 PATH}{\fs20\insrsid10289445  variable.
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 3.\tab}}\pard \ql \fi-360\li1080\ri0\nowidctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls6
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin1080\itap0 {
\fs20\insrsid10289445 Optionally create a }{\i\fs20\insrsid10289445 file association}{\fs20\insrsid10289445  between Rexx script files and the BRexx interpreter.  This allows you to run BRexx scripts just by double-clicking on them.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par To set environmental variables under Windows versions such as Windows XP, right-click on the }{\b\fs20\insrsid10289445 My Computer}{\fs20\insrsid10289445  icon.  Select }{\b\fs20\insrsid10289445 Properties}{\fs20\insrsid10289445 
 off the pick list, then select the }{\b\fs20\insrsid10289445 Advanced}{\fs20\insrsid10289445  tab.   On the panel that appears, select  }{\b\fs20\insrsid10289445 Environmental Variables}{\fs20\insrsid10289445 .   Select }{\b\fs20\insrsid10289445 New}{
\fs20\insrsid10289445  to create a new environmental variable.  Call this new environmental variable }{\b\fs20\insrsid10289445 RXLIB}{\fs20\insrsid10289445  and set its value to the directory where BRexx resides:
\par 
\par        }{\b\fs20\insrsid10289445 RXLIB=C:\\BREXX}{\b\fs20\cf0\revised\revauth1\revdttm-964270958\insrsid10289445 \\lib}{\b\fs20\insrsid10289445 
\par }{\fs20\insrsid10289445 
\par The }{\b\fs20\insrsid10289445 PATH}{\fs20\insrsid10289445  environmental variable will likely already exist.  Highlight it and select the }{\b\fs20\insrsid10289445 Edit}{\fs20\insrsid10289445  f
unction.  Add the BRexx home directory to the list of directories separated by semicolons.  In this example, we added BRexx to the end of a }{\b\fs20\insrsid10289445 PATH}{\fs20\insrsid10289445  list that already contained several elements:
\par 
\par       }{\b\fs20\insrsid10289445 PATH=c:\\perl;.;c:\\pdksh;c:\\brexx
\par }{\fs20\insrsid10289445 
\par An alternative way to set Windows environmental variables is by using the }{\b\fs20\insrsid10289445 SET}{\fs20\insrsid10289445  command in the }{\b\fs20\insrsid10289445 autoexec.bat}{\fs20\insrsid10289445  file.   See the }{\i\fs20\insrsid10289445 
DOS Install}{\fs20\insrsid10289445  instructions below for information on how to do this.
\par 
\par To set the file association, open Windows Explorer.  Select }{\b\fs20\insrsid10289445 Tools}{\fs20\insrsid10289445  from the top menu bar, and }{\b\fs20\insrsid10289445 Folder Options}{\fs20\insrsid10289445  from the }{\b\fs20\insrsid10289445 Tools}{
\fs20\insrsid10289445  drop-down list box.  Select the tab }{\b\fs20\insrsid10289445 File Types}{\fs20\insrsid10289445 .  Select }{\b\fs20\insrsid10289445 New}{\fs20\insrsid10289445  to add a new file type for files having the extension }{
\b\fs20\insrsid10289445 R}{\fs20\insrsid10289445 , and associate this extension with the BRexx interpreter executable.  Most likely the interpreter executable will be named }{\b\fs20\insrsid10289445 rexx32.exe}{\fs20\insrsid10289445 
.  It will reside in the directory where you installed BRexx.
\par 
\par }{\i\fs20\insrsid10289445 
\par DOS Install}{\fs20\insrsid10289445  -  You could alternatively install BRexx under Windows just like you do under DOS-family operating systems.  Here are the DOS install instructions.
\par 
\par Set the }{\b\fs20\insrsid10289445 RXLIB}{\fs20\insrsid10289445  and }{\b\fs20\insrsid10289445 PATH}{\fs20\insrsid10289445  variables by adding lines to the }{\b\fs20\insrsid10289445 autoexec.bat}{\fs20\insrsid10289445 
 file.  Place a statement like this in the }{\b\fs20\insrsid10289445 autoexec.bat}{\fs20\insrsid10289445  file to set environmental variable }{\b\fs20\insrsid10289445 RXLIB}{\fs20\insrsid10289445 :
\par 
\par        }{\b\fs20\insrsid10289445 SET RXLIB=C:\\BREXX
\par 
\par }{\fs20\insrsid10289445 Add the directory location to the }{\b\fs20\insrsid10289445 PATH}{\fs20\insrsid10289445  variable indicating where the BRexx executable resides.  Here\rquote 
s an example where we added the BRexx directory to the end of an existing }{\b\fs20\insrsid10289445 PATH}{\fs20\insrsid10289445  list:
\par 
\par }{\b\fs20\insrsid10289445        PATH=c:\\perl;.;c:\\pdksh;c:\\brexx}{\fs20\insrsid10289445 
\par 
\par These settings will automatically be established by the boot process every time you start up  DOS or Windows.  The OS boot process automatically executes the }{\b\fs20\insrsid10289445 autoexec.bat}{\fs20\insrsid10289445  procedure.   
\par }{\i\fs20\insrsid10289445 
\par 
\par Linux and Unix Installs}{\fs20\insrsid10289445  --  Follow the same installation procedures you would for any product distributed as a compressed file.  Chapter 1 described the generic procedures for Linux, Unix, and BSD installs.
\par 
\par Set environmental variable }{\b\fs20\insrsid10289445 RXLIB}{\fs20\insrsid10289445  (in capital letters) to point to BRexx\rquote s library directory.  
\par 
\par Add a line like this as the first line of each script, assuming that the BRexx interpreter resides in directory }{\b\fs20\insrsid10289445 /usr/local/bin/}{\fs20\insrsid10289445 :
\par 
\par }{\b\fs20\insrsid10289445       #!/usr/local/bin/rexx
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\pnrauth1\pnrdate-964270957\pnrnot1\adjustright\rin0\lin0\itap0 {\fs20\cf0\revised\revauth1\revdttm-964270957\insrsid10289445 A more portable (independend of the installation directory) way will be to use
\par \tab #!/bin/env rexx
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par }{\fs20\insrsid10289445 Make any script file you create executable, so that you can run it:
\par 
\par       }{\b\fs20\insrsid10289445 chmod  +x  script_file_name             # set file permission bits to EXECUTABLE
\par }{\fs20\insrsid10289445 
\par 
\par }{\i\fs20\insrsid10289445 Windows CE Installation}{\fs20\insrsid10289445  \endash   See the product documentation, which provides explicit details on how to install the product for use under Windows CE.}{
\fs20\cf0\revised\revauth1\revdttm-964270957\insrsid10289445  From the 2.1 version there is a setup}{\fs20\cf0\revised\revauth1\revdttm-964270956\insrsid10289445 .exe}{\fs20\cf0\revised\revauth1\revdttm-964270957\insrsid10289445  program}{
\fs20\cf0\revised\revauth1\revdttm-964270956\insrsid10289445  that performs the installation. For linux I have also a rpm distibution}{\fs20\insrsid10289445 
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Extra Built-in Functions
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par BRexx includes many built-in functions beyond those included in standard Rexx.  This section describes most of them.
\par 
\par Functions that manage stack buffers (as in mainframe VM/CMS Rexx):
\par 
\par      makebuf()   - creates a new system stack
\par      desbuf()     -  destroys all system stacks
\par      dropbuf(n)  - destroys the top }{\b\fs20\insrsid10289445 n}{\fs20\insrsid10289445  stacks
\par 
\par Several low-level functions interact with the PC:
\par 
\par      load(file)                        - loads a file of Rexx scripts to use as a library.  This is the basic
\par \tab \tab \tab       function by which scripts access external BRexx function libraries.}{\fs20\cf0\revised\revauth1\revdttm-964270956\insrsid10289445 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\pnrauth1\pnrdate-964270956\pnrnot1\adjustright\rin0\lin0\itap0 {\fs20\cf0\revised\revauth1\revdttm-964270956\insrsid10289445 In the new version 2.1.0 (I haven}{
\fs20\cf0\revised\revauth1\revdttm-964270956\insrsid10289445 \rquote }{\fs20\cf0\revised\revauth1\revdttm-964270956\insrsid10289445 t upload it yet on the web site)}{\fs20\cf0\revised\revauth1\revdttm-964270955\insrsid10289445 
 the load is deprecated and replaced by the import(file|dynamic library) so you can import functions from dll}{\fs20\cf0\revised\revauth1\revdttm-964270955\insrsid10289445 \rquote }{\fs20\cf0\revised\revauth1\revdttm-964270955\insrsid10289445 s
\par i.e. }{\fs20\cf0\revised\revauth1\revdttm-964270954\insrsid10289445 In the new release the mysql API is provided as a dynamicallyl loadable module
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\prauth1\prdate-964270954\pnrauth1\pnrdate-964270954\pnrnot1\adjustright\rin0\lin0\itap0\pararsid10289445 {\*\oldpprops \pard \ql \li0\ri0\nowidctlpar\faauto
\pnrauth1\pnrdate-964270954\pnrnot1\adjustright\rin0\lin0\itap0\pararsid10289445 }{\fs20\cf0\revised\revauth1\revdttm-964270955\insrsid10289445 call import }{\fs20\cf0\revised\revauth1\revdttm-964270955\insrsid10289445 \'93}{
\fs20\cf0\revised\revauth1\revdttm-964270955\insrsid10289445 librxmysql.so}{\fs20\cf0\revised\revauth1\revdttm-964270954\insrsid10289445 \'94}{\fs20\insrsid10289445 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445      intr(number,reg-string)  - executes x86 soft interrupt (works under DOS only)
\par      storage(address,length,data)  - returns contents of the specified memory location,
\par                                                        or returns the size of memory if no parms are encoded.
\par }\pard\plain \s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
                                                       Can also overwrite contents of a storage location.
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445      vardump(symbol,option) \endash  returns the tree of internal interpreter variables
\par 
\par Here are the mathematical functions BRexx adds:
\par 
\par }\trowd \irow0\irowband0\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone 
\clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 ACOS(number) \cell Arc-cosine \cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow0\irowband0\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard 
\ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 ASIN(number) \cell Arc-sine \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow1\irowband1
\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 ATAN(number) \cell Arc-tangent \cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow2\irowband2\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard 
\ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 COS(number) \cell Cosine \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow3\irowband3
\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 COSH(number) \cell Hyperbolic cosine \cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow4\irowband4\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard 
\ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 EXP(number) \cell Exponiation\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow5\irowband5
\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 LOG(number) \cell Natural log\cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow6\irowband6\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard 
\ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 LOG10(number) \cell Logarithm of base 10 \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 
\trowd \irow7\irowband7\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone 
\clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 POW10(number) \cell Power using base 10 \cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow8\irowband8\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard 
\ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 SIN(number) \cell Sine  \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow9\irowband9
\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 SINH(number) \cell Hyperbolic sine \cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow10\irowband10\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard 
\ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 SQRT(number) \cell Square root \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow11\irowband11
\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 TAN(number) \cell Tangent \cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow12\irowband12\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard 
\ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 TANH(number) \cell Hyperbolic tangent \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 
\trowd \irow13\irowband13\ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone 
\clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 POW(a,b) \cell Raise }{\b\fs20\insrsid10289445 a}{\fs20\insrsid10289445  to power }{
\b\fs20\insrsid10289445 b}{\fs20\insrsid10289445  \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid10289445 \trowd \irow14\irowband14\lastrow \ts11\trleft0\trftsWidth1 \clvertalc\clbrdrt\brdrnone 
\clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2496\clshdrawnil \cellx2496\clvertalc\clbrdrt\brdrnone \clbrdrl\brdrnone \clbrdrb\brdrnone \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth4032\clshdrawnil \cellx6528\row 
}\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Input/Output 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par BRexx supports the ANSI-1996 set of input/output functions:  }{\b\fs20\insrsid10289445 charin}{\fs20\insrsid10289445 , }{\b\fs20\insrsid10289445 charout}{\fs20\insrsid10289445 , }{\b\fs20\insrsid10289445 chars}{\fs20\insrsid10289445 , }{
\b\fs20\insrsid10289445 linein}{\fs20\insrsid10289445 , }{\b\fs20\insrsid10289445 lineout}{\fs20\insrsid10289445 , }{\b\fs20\insrsid10289445 lines}{\fs20\insrsid10289445 , and }{\b\fs20\insrsid10289445 stream}{\fs20\insrsid10289445 
.   Rexx scripts that run with any other Rexx interpreter will run under BRexx.  
\par 
\par BRexx goes beyond standard Rexx I/O to give the developer alternatives.  It offers a full set of C-language built-in functions for I/O.  These allow programmers to explicitly }{\b\fs20\insrsid10289445 open}{\fs20\insrsid10289445  or }{
\b\fs20\insrsid10289445 close}{\fs20\insrsid10289445  files, open files in specific modes by }{\b\fs20\insrsid10289445 open}{\fs20\insrsid10289445  and }{\b\fs20\insrsid10289445 stream}{\fs20\insrsid10289445 , }{\b\fs20\insrsid10289445 flush}{
\fs20\insrsid10289445  file buffers, test for end of file through }{\b\fs20\insrsid10289445 eof}{\fs20\insrsid10289445 , }{\b\fs20\insrsid10289445 read}{\fs20\insrsid10289445  and }{\b\fs20\insrsid10289445 write}{\fs20\insrsid10289445 
 either characters or lines, and position the file pointers by }{\b\fs20\insrsid10289445 seek}{\fs20\insrsid10289445 .   
\par 
\par This C-oriented I/O model offers a more full-featured alternative to traditional Rexx stream I/O. Some other Rexx interpreters offer such functions through }{\b\fs20\insrsid10289445 stream}{\fs20\insrsid10289445 
 function commands, and BRexx as well includes an extensive set of over a dozen }{\b\fs20\insrsid10289445 stream}{\fs20\insrsid10289445   function commands.
\par 
\par Here are the C-like I/O built-in functions:
\par 
\par      open(file,mode)   - opens a file in for reading, writing, or appending in either binary
\par                                    or text modes.  Returns a file handle.
\par      close(file)            - explicitly closes a file.
\par      read(file,amount) \endash  reads data as characters, bytes, or lines
\par      write(file,data,[newline])  - writes characters, bytes or lines of data
\par      eof(file)                           - tests for end of file
\par      flush(file)                        - explicitly flushes the file buffer
\par      seek(file,offset,[option]) \endash  explicitly positions the file pointer 
\par      stream(stream,[option],[command]) \endash  supports ANSI }{\b\fs20\insrsid10289445 stream}{\fs20\insrsid10289445  options, plus permits
\par                                                                  issuing some 15 different file I/O commands
\par 
\par The C I/O model will be appreciated by those who require its powerful features or are familiar with the C, C++, or C# languages.
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
\par }\pard\plain \s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
BRexx further provides a set of nine functions that interface to the free database, MySQL.  These are built-in functions, not an external library.  The 
MySQL functions offer a third alternative for I/O, one based on the most popular open source database.   Here are these functions:
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par      dbclose()                           \tab \tab - terminates a database connection
\par }\pard\plain \s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445      dbconnect(host,[user],[password],database) \endash  establishes a database connection
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445     }{\fs20\insrsid10289445 dberror(["Alphanumeric"])\tab \tab 
- returns the error number of the last error
\par      dbescstr(string)                 \tab \tab - escapes special characters for use in a string
\par }\pard\plain \s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445      dbfield[num|name [,"N","T","K","L","M","U","A","F"]]) 
\par                                                \tab \tab - returns info on fields from the previous query
\par      dbget(row,col|name)         \tab \tab - returns the value of the specified data element
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445     }{\fs20\insrsid10289445 dbisnull(row,col|name)      \tab \tab - tells if a data element is null

\par      dbinfo("Rows"|"Fields"|"Insertid")\tab - returns info about the previous database operation
\par      dbsql(sqlcmd)                   \tab \tab - executes the string as a SQL statement 
\par 
\par The MySQL interface is not part of the compiled Windows binary.  If you\rquote re using Windows and you require this feature, build BRexx from source code and link in your MySQL client software.
\par 
\par To summarize, BRexx scripts have three alternative I/O methods, all based on built-in functions: standard Rexx I/O, C-like I/O, and MySQL database I/O.   Here are the advantages to each:
\par 
\par }{\fs20\ul\insrsid10289445 I/O Model:}{\fs20\insrsid10289445 \tab \tab }{\fs20\ul\insrsid10289445 Advantages}{\fs20\insrsid10289445 :
\par }{\fs20\lang1040\langfe1033\crauth1\crdate-964270961\langnp1040\insrsid10289445\charrsid10289445 {\*\oldcprops \lang1033\langfe1033\crauth1\crdate-964270961\langnp1033\charrsid10289445 }Rexx I/O model \tab \tab -- Simple, portable, standard
\par }{\fs20\insrsid10289445 C I/O model \tab \tab -- More explicit control over I/O
\par MySQL database I/O\tab -- Accesses the popular MySQL open source database.
\par \tab \tab \tab    Yields all the benefits of full database I/O through built-in functions.
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 The External Function Libraries
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
\par }\pard\plain \s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
BRexx comes complete with about a dozen external function libraries.  To use the library functions, first load the library with the }{\b\insrsid10289445 load}{\insrsid10289445  function:
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
      call load "ansi.r"                    /* loads the ANSI.R library functions for use */
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 or
\par }{\b\fs20\insrsid10289445       call load \'93files.r\'94                   /* loads File function library for use */
\par }{\fs20\insrsid10289445 or}{\b\fs20\insrsid10289445 
\par       call load \'93dos.r\'94\tab \tab   /* loads the DOS library functions for use */ 
\par }{\insrsid10289445 
\par }{\fs20\insrsid10289445 Once loaded, }{\i\fs20\insrsid10289445 all}{\fs20\insrsid10289445  the functions in the library are accessible in the normal manner.   The }{\b\fs20\insrsid10289445 load}{\fs20\insrsid10289445 
 function is the rough equivalent of the }{\b\fs20\insrsid10289445 rxfuncadd}{\fs20\insrsid10289445  function used in other Rexx implementations, except that }{\b\fs20\insrsid10289445 load}{\fs20\insrsid10289445 
 makes accessible the full set of functions residing in the library.  
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 Here are the main external function libraries and what they offer.
\par 
\par }{\i\fs20\insrsid10289445 ANSI Screen I/O }{\fs20\insrsid10289445 (}{\i\fs20\insrsid10289445 for Unix and DOS). }{\fs20\insrsid10289445 
  A set of about a dozen functions that manipulate the cursor and control the attributes of text displayed on the screen.   This provides the standard, terminal-independent set of ANSI screen control routines.  
\par 
\par }{\i\fs20\insrsid10289445 ANSI Screen I/O (for Windows and 32-bit DOS).}{\fs20\insrsid10289445   The 32-bit version of BRexx supplies the ANSI terminal emulation functions }{\i\fs20\insrsid10289445 as built-in functions}{\fs20\insrsid10289445 
 for higher performance.
\par 
\par }{\i\fs20\lang1040\langfe1033\crauth1\crdate-964270961\langnp1040\insrsid10289445\charrsid10289445 {\*\oldcprops \lang1033\langfe1033\crauth1\crdate-964270961\langnp1033\charrsid10289445 }Console I/O (for DOS).}{
\fs20\lang1040\langfe1033\crauth1\crdate-964270961\langnp1040\insrsid10289445\charrsid10289445 {\*\oldcprops \lang1033\langfe1033\crauth1\crdate-964270961\langnp1033\charrsid10289445 }  }{\fs20\insrsid10289445 
About a dozen functions that control the I/O mode, manipulate the cursor and read keyboard input.  These offer an alternative to ANSI Screen I/O modeled on the popular C language \'93console I/O\rquote  (or \'93conio\'94) library.
\par 
\par }{\i\fs20\insrsid10289445 Date Functions}{\fs20\insrsid10289445  (}{\i\fs20\insrsid10289445 for Unix and DOS).}{\fs20\insrsid10289445    A dozen functions that return and manipulate dates.
\par 
\par }{\i\fs20\insrsid10289445 DOS Functions (for DOS).}{\fs20\insrsid10289445   20 DOS functions that retrieve low-level information including segment, offset, and interrupt addresses, disk and directory information, machine name and 
more.  These work with any form of DOS but may not be available under Windows (depending on your Windows version).
\par 
\par }\pard\plain \s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\i\insrsid10289445 EBCDIC Functions (for Unix and DOS)}{\insrsid10289445 
.   Functions that convert ASCII to EBCDIC and vice versa.  This is useful becau
se IBM and compatible mainframes use EBCDIC character encoding, while all mid-range and desktop computers rely on ASCII.  These functions prove useful in data transfer between machines using the two different data encoding schemes.
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par }{\i\fs20\insrsid10289445 File Functions}{\fs20\insrsid10289445  }{\i\fs20\insrsid10289445 (for Unix and DOS).}{\i\insrsid10289445  }{\fs20\insrsid10289445 
 A dozen file functions that read or write an entire file to/from a Rexx array, return file size and attributes, etc.
\par 
\par }{\i\fs20\insrsid10289445 HTML CGI-scripting Functions}{\fs20\insrsid10289445 .  These support CGI scripting and manage cookies. 
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Windows CE
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par Brexx has been specially customized for Windows CE with its CE-oriented built-in functions.   While more functions may be added and the workings of some of the existing ones altered, this list gives an idea of what is offered:
\par 
\par For managing the }{\i\fs20\insrsid10289445 console}{\fs20\insrsid10289445  or display:
\par 
\par       clrscr()         -  clears main window
\par       clreol()         - clears from the cursor position to the end of the line
\par       wherex(), wherey()  -  returns cursor position
\par       gotoxy(x,y)  - moves cursor to indicated screen coordinates
\par       getch()        - get a character from the keyboard buffer
\par       kbhit()         - tells if a character is waiting in the keyboard buffer
\par       
\par }\pard\plain \s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 File system functions:
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par       copyfile(sourcefile,destfile)    - copies a file
\par       movefile(sourcefile,destfile)   - moves a file
\par       delfile(file)                              - deletes a file
\par       mkdir(directory)                     - makes a directory
\par       rmdir(directory)                      - eliminates a directory
\par       dir(filemask)                           - returns the complete directory list
\par 
\par Windowing functions:
\par 
\par       windowtitle(title)                     - sets the title of the window
\par       msgbox(test, title, [option])    - displays a message in a message box
\par       clipboard([type|cmd [,data]])  - gets, sets, lists or clears data in the clipboard
\par 
\par Unicode functions:
\par 
\par       a2u(ascii_string)                    - returns the ASCII string as Unicode
\par       u2a(unicode_string)              - returns the Unicode string as ASCII
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Issuing Operating System Commands
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par BRexx issues commands to the operating system using the stack for command input and/or output.  This example captures the output of the }{\b\fs20\insrsid10289445 dir}{\fs20\insrsid10289445  (directory) command into the stack:
\par 
\par }{\b\fs20\insrsid10289445      \lquote dir (STACK\rquote 
\par }{\fs20\insrsid10289445 
\par Access the command\rquote s output by issuing }{\b\fs20\insrsid10289445 pull}{\fs20\insrsid10289445  instructions to read the stack\rquote s contents.
\par 
\par BRexx recognizes the keyword strings }{\b\fs20\insrsid10289445 (STACK }{\fs20\insrsid10289445 ,}{\b\fs20\insrsid10289445  (FIFO}{\fs20\insrsid10289445  and }{\b\fs20\insrsid10289445 (LIFO}{\fs20\insrsid10289445  , coded in the manner shown above.
\par 
\par This example command sends input to the operating system\rquote s }{\b\fs20\insrsid10289445 time}{\fs20\insrsid10289445  command through the stack:
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445      \lquote STACK> time\rquote 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par A unique BRexx feature is that commands and programs can be invoked by coding them as if they were functions, }{\i\fs20\insrsid10289445 so long as they use standard I/O}{\fs20\insrsid10289445 .  Here are examples:
\par 
\par }{\b\fs20\insrsid10289445       say  \lquote dir\rquote ()            /* displays a file list via the operating system DIR command    */
\par       say  \lquote cd\rquote ()            /* displays the current working directory via the CD command */
\par       directory = \lquote cd\rquote ()       /* capture results of the operating system\rquote s CD command  */
\par  
\par }\pard\plain \s15\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Be sure to encode the parentheses so that BRexx recognizes the \'93function call.\'94
   This technique can be used with any command line program (not just operating system commands), as long as they use standard I/O.
\par 
\par Windows users may see varied results when using the redirection techniques, depending on their version of Windows.  This is because operating systems in the Windows family do not treat standard I/O and redirection consistently.  This is }{
\i\insrsid10289445 not}{\insrsid10289445  a shortcoming of BRexx, but rather an aspect of how Windows operating systems re-direct I/O.  Different Windows versions re-direct I/O inconsistently.
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par BRexx recognizes several environments as the target for operating system commands:  }{\b\fs20\insrsid10289445 COMMAND}{\fs20\insrsid10289445 , }{\b\fs20\insrsid10289445 SYSTEM}{\fs20\insrsid10289445 , }{\b\fs20\insrsid10289445 DOS}{\fs20\insrsid10289445 
, and }{\b\fs20\insrsid10289445 INT2E}{\fs20\insrsid10289445 .  }{\b\fs20\insrsid10289445 INT2E}{\fs20\insrsid10289445   is the fast (but undocumented) way to issue }{\b\fs20\insrsid10289445 command.com}{\fs20\insrsid10289445 
 commands via Interrupt 2E.   This is a DOS-only feature.
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Summary
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par This chapter summarizes some of the unique features of BRexx.   This goal is to give you a feel for the features BRexx offers for Windows, Windows CE,  Linux, Unix, 16- a
nd 32- bit DOS, Mac OS and other platforms.  This is only a brief summary of what is available.  Interested readers should download the product and review its documentation for further information and product updates.
\par 
\par The next chapter presents several example programs that demonstrate BRexx\rquote s unique features. 
\par \page 
\par }\pard\plain \s4\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel3\adjustright\rin0\lin0\itap0 \b\i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Test Your Understanding
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 1.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls8
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc1\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 What Rexx language standards does BRexx meet?  
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 2.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls8
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 Name three key advantages to BRexx.  Why might you use it as opposed to other open source Rexx interpreters?
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 3.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls8
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 What extra functions or services does BRexx provide for Windows CE?  
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 4.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls8
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc4\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr4\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 Name the functions for managing stack buffers.  What does each do?
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 5.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls8
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc5\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr5\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 How do you execute an operating system command as if it were a function call from within a BRexx script?  Why would you want to do this?  What restriction is placed on this capability?
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 6.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls8
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc6\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr6\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 What are the major external libraries provided with BRexx?  What must you do before you can access their functions from within a script?
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 7.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls8
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc7\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr7\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 What are the three }{\i\fs20\insrsid10289445 I/O models}{\fs20\insrsid10289445  BRexx supports?  When would you use each?
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 8.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls8
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc8\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr8\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 What are the ways in which you can execute operating system commands from BRexx scripts?  How do you send the command input and capture its output in each approach?
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par 
\par }\pard\plain \s4\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel3\adjustright\rin0\lin0\itap0 \b\i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid10289445 Programming Problems
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 1.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls7
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc1\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 Download and install BRexx on your PC.   Are installs the same or different for Windows and 32-bit DOS?  
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 2.\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\faauto\ls7
\pnrauth1\pnrdate-964270961\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright\rin0\lin360\itap0 {
\fs20\insrsid10289445 Locate the }{\b\fs20\insrsid10289445 rexxcps.r}{\fs20\insrsid10289445  performance-benchmark program that ships with BRexx.  (It should reside among the example programs.)   Run this performance-benchmark progr
am under BRexx and any other Rexx interpreter you may have installed.   Compare the results.  Which is faster?  Why?
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\insrsid10289445  
\par }}